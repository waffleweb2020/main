version: '3.0'

services:
  waffleweb:
    build:
      context: ./test
    image: nuxt_dev
    container_name: waffleweb
    command: npm run start
    restart: always
    networks:
      - waffle-network
#  waffleback:
#    container_name: waffleback
#    build:
#      context: ./waffle-back
#    depends_on:
#      - waffledb
#    networks:
#      - waffle-network
#  waffledb:
#    image: postgres:13.3
#    environment:
#      POSTGRES_DB: "waffle"
#      POSTGRES_USER: "postgres"
#      POSTGRES_PASSWORD: "qwerty"
#    ports: ["5430:5432"]
#    volumes:
#      - ./pgdata:/var/lib/postgresql/data
#    networks:
#      - waffle-network
  nginx:
    image: nginx
    container_name: waffle-nginx
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    depends_on:
      - waffleweb
      - waffleback
    networks:
      - waffle-network
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
networks:
  waffle-network:
    driver: bridge

volumes:
  pgdata:
  www-html:
  etc-letsencrypt:
  certbot-var: