version: '3.0'

services:
  waffleweb:
    build:
      context: ./waffleweb
    image: nuxt_dev
    container_name: waffleweb
    command: npm run start
    restart: always
    networks:
      - waffle-network
  waffleback:
    container_name: waffleback
    build:
      context: ./waffle-back
    depends_on:
      - waffledb
    networks:
      - waffle-network
  waffledb:
    image: postgres:13.3
    environment:
      POSTGRES_DB: "waffle"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "qwerty"
    ports: ["5430:5432"]
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    networks:
      - waffle-network
  nginx:
    image: nginx
    container_name: waffle-nginx
    ports: ["80:80", "443:443"]
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    depends_on:
      - waffleweb
      - waffleback
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    networks:
      - waffle-network
  certbot:
    image: certbot/certbot
    depends_on:
      - nginx
    container_name: waffle-certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/html --email waffleweb.it@gmail.com --agree-tos --no-eff-email -d waffle-web.ru -d www.waffle-web.ru
networks:
  waffle-network:
    driver: bridge

volumes:
  pgdata:
  www-html:
  dbfile:
  etc-letsencrypt:
  certbot-var: